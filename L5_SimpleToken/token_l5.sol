
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

// This is class that describes you smart contract.
contract token_l5 {

    struct MyToken
    {
        string name;
        uint valueuint;
        string valuestr;       
    }

    MyToken[] tArr;
    mapping(uint=>uint) OnSale;
    mapping(uint=>uint) token_owner;

    
    constructor() public {       
        require(tvm.pubkey() != 0, 101);    
        require(msg.pubkey() == tvm.pubkey(), 102);      
        tvm.accept();
    }

    function createToken (string tname, uint value_uint, string value_str) public checkOwnerAndAccept{

       for (uint i=0; i< tArr.length; i++)
       {
           require(tArr[i].name != tname, 102); 
       }
       tArr.push(MyToken(tname,value_uint,value_str));
       OnSale[tArr.length-1] = 0;
       token_owner[tArr.length-1] = msg.pubkey();
    }
    function Sell (uint id, uint cost) public checkOwnerAndAccept{    //Продажа
    
       require(cost != 0, 102); 
       //bool b;
       require(OnSale.exists(id) == true, 102);
       OnSale[id] = cost;       //Изменение цены. Невыставленные на продажу токены  имеют нулевую цену, при покупке на жто должна быть проверка.
       //Но тут не будет метода покупки токена
    }    
     modifier checkOwnerAndAccept {       
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept(); 
       _;
    }
}
